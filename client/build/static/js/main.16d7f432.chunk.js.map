{"version":3,"sources":["assets/loading.svg","pages/LandingPage/images/logo.png","components/NavTop/images/logo-icon.png","components/NavTop/images/logo-text.png","components/Loading/Loading.js","components/Auth0Provider/Auth0LoginButton.js","components/Auth0Provider/Auth0LogoutButton.js","pages/LandingPage/LandingPage.js","components/NavTop/index.js","components/LaunchBtn/index.js","components/GigList/index.js","components/GigSetList/index.js","components/Instructions/index.js","components/AllSetList/index.js","components/SongsGigDash/index.js","components/SongSetlistDash/index.js","components/AddSong/index.js","utils/API.js","pages/MainPage/MainPage.js","components/GigInputSubmit/index.js","components/SetlistInputSubmit/index.js","pages/CrudPage/CrudPage.js","components/Lyrics/index.js","pages/LaunchedPage.js","utils/history.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Loading","className","src","loading","alt","Auth0LoginButton","loginWithRedirect","useAuth0","onClick","Auth0LogoutButton","logout","LandingPage","Container","Jumbotron","style","marginTop","padding","backgroundColor","Logo","width","class","color","NavTop","useState","isAuthenticated","user","Navbar","light","expand","NavbarBrand","href","LogoIcon","LogoText","Nav","navbar","NavItem","NavLink","tag","RouterNavLink","to","exact","activeClassName","Button","id","fontWeight","fontSize","LaunchBtn","handleLaunchClick","outline","size","GigList","props","gigs","Card","body","CardTitle","CardText","map","gig","name","key","_id","handleGigClick","GigSetList","currentGig","setlists","setlist","setlistClickTop","Instructions","AllSetList","allSetlistClick","SongsGigDash","currentSetlist1","songs","songName","SongsSetlistDash","currentSetlist2","AddSong","songTitle","songArtist","handleSongSubmit","onChange","Input","value","placeholder","email","axios","post","get","savedGigs","gigId","savedSetlist","setlistId","MainPage","state","launchedGig","toLaunchPage","API","then","res","setState","data","setRedirect","renderRedirect","catch","err","console","log","this","Row","Col","sm","Component","withAuthenticationRequired","onRedirecting","GigInputSubmit","InputGroup","gigName","InputGroupAddon","addonType","gigSubmit","SetlistInputSubmit","setlistName","setSubmit","CrudPage","handleInput","event","target","handleGigSubmit","preventDefault","handleSetlistSubmit","loadSetlists","loadGigs","e","songObject","title","artist","error","Lyrics","LaunchedPage","currentSetlist","handleSetlistClick","createBrowserHistory","App","history","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","domain","config","clientId","audience","redirectUri","origin","onRedirectCallback","appState","push","returnTo","pathname","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16d7f432.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.c5590569.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.c31ae9c2.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-icon.96943f7b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-text.f3d94296.png\";","import React from \"react\";\r\nimport loading from \"../../assets/loading.svg\";\r\n\r\nconst Loading = () => (\r\n  <div className=\"spinner\">\r\n    <img src={loading} alt=\"Loading\" />\r\n  </div>\r\n);\r\n\r\nexport default Loading;","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\n\r\nconst Auth0LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n\r\n  return <button className=\"Auth0Button myButton\" onClick={() => loginWithRedirect()}>START JAMMIN'</button>;\r\n};\r\n\r\nexport default Auth0LoginButton;","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst Auth0LogoutButton = () => {\r\n  const { logout } = useAuth0();\r\n\r\n  return <button className=\"Auth0Button myButton\" onClick={() => logout()}>Log Out</button>;\r\n};\r\n\r\nexport default Auth0LogoutButton;","\r\nimport React, { Component } from 'react';\r\nimport LoginForm from \"../../components/LoginForm\";\r\nimport Auth0LoginButton from '../../components/Auth0Provider/Auth0LoginButton';\r\nimport Auth0LogoutButton from '../../components/Auth0Provider/Auth0LogoutButton';\r\nimport Auth0Profile from '../../components/Auth0Provider/Auth0Profile';\r\nimport { Container, Jumbotron } from 'reactstrap';\r\nimport \"./Landing.css\"\r\nimport Logo from \"./images/logo.png\"\r\n\r\n\r\n\r\nconst LandingPage = () => {\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"jumbo\">\r\n        <Jumbotron style={{ marginTop: \"30px\", padding: \"0px\", backgroundColor: \"transparent\"}}>\r\n          <div className=\"d-flex flex-column\">\r\n            <div className=\"d-flex justify-content-center\">\r\n              <img src={Logo} alt=\"SetFlow Logo\" width=\"281px\"/>\r\n              {/* <h1 style={{ color: \"#f8d78a\", fontWeight: \"700\", fontSize: \"65px\" }}>SetFlow</h1> */}\r\n            </div>\r\n            <p className=\"d-flex justify-content-center section\">THE ULTIMATE SETLIST ORGINIZATION TOOL FOR MUSICIANS</p>\r\n          </div>\r\n          <Container>\r\n            <div className=\"d-flex flex-column\">\r\n              <p className=\"d-flex justify-content-center\">\r\n                <Auth0LoginButton>Auth0 Login</Auth0LoginButton>\r\n              </p>\r\n              <p className=\"d-flex justify-content-center\">\r\n                <Auth0LogoutButton class=\"center\" color=\"secondary\">Auth0 Login</Auth0LogoutButton>\r\n              </p>\r\n            </div>\r\n          </Container>\r\n        </Jumbotron>\r\n      </Container>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { useState } from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { NavLink as RouterNavLink } from \"react-router-dom\";\r\nimport { Button, Navbar, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\r\n// import styles from \"./style.css\"\r\nimport LogoIcon from \"./images/logo-icon.png\"\r\nimport LogoText from \"./images/logo-text.png\"\r\nimport './style.css'\r\n\r\n\r\nconst NavTop = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const {\r\n    user,\r\n    isAuthenticated,\r\n    loginWithRedirect,\r\n    logout,\r\n  } = useAuth0();\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const logoutWithRedirect = () =>\r\n    logout({\r\n      returnTo: window.location.origin,\r\n    });\r\n\r\n  return (\r\n    <div>\r\n      <Navbar light expand=\"md\">\r\n        <NavbarBrand href=\"/main\">\r\n          <img src={LogoIcon} alt=\"Logo Icon\" width=\"50px\" />\r\n          <img src={LogoText} alt=\"Logo Text\" width=\"100px\" />\r\n        </NavbarBrand>\r\n        <Nav className=\"ml-auto navbuttons\" navbar>\r\n          <NavItem>\r\n            <NavLink\r\n              className=\"navbuttons\"\r\n              tag={RouterNavLink}\r\n              to=\"/main\"\r\n              exact\r\n              activeClassName=\"router-link-exact-active\">\r\n              Home\r\n              </NavLink>\r\n          </NavItem>\r\n          {isAuthenticated && (\r\n            <NavItem>\r\n              <NavLink\r\n                className=\"navbuttons\"\r\n                tag={RouterNavLink}\r\n                to=\"/edit\"\r\n                exact\r\n                activeClassName=\"router-link-exact-active\">\r\n                Edit Gigs & Sets\r\n              </NavLink>\r\n            </NavItem>)}\r\n          {isAuthenticated && (\r\n            <NavItem>\r\n              <NavLink\r\n                className=\"navbuttons\"\r\n                tag={RouterNavLink}\r\n                to=\"/launched\"\r\n                exact\r\n                activeClassName=\"router-link-exact-active\">\r\n                Launched Gigs\r\n              </NavLink>\r\n            </NavItem>)}\r\n          {!isAuthenticated && (\r\n            <NavItem>\r\n              <Button\r\n                id=\"qsLoginBtn\"\r\n                color=\"primary\"\r\n                className=\"btn-margin\"\r\n                onClick={() => loginWithRedirect()}\r\n                style={{ fontWeight: \"500\", color: \"#cea935\", fontSize: \"20px\" }}>\r\n                Log in\r\n                </Button>\r\n            </NavItem>\r\n          )}\r\n\r\n        </Nav>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavTop;","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport './style.css';\r\n\r\nconst LaunchBtn = ({ handleLaunchClick }) => {\r\n  return (\r\n    <Button className=\"LaunchBtn\" outline size=\"sm\" onClick={handleLaunchClick} >🚀 Launch</Button>\r\n  )\r\n};\r\n\r\nexport default LaunchBtn;\r\n\r\n\r\n","import React from 'react';\r\nimport LaunchBtn from '../LaunchBtn'\r\nimport { CardTitle, CardText, Card } from 'reactstrap';\r\n\r\nconst GigList = props => {\r\n  // console.log(`GigList Component: ${props}`)\r\n  if (!props.gigs) {\r\n    return (\r\n      <div className=\"d-flex flex-column\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Card body className=\"titleBg\">\r\n            <CardTitle className=\"title\">My Gigs</CardTitle>\r\n          </Card>\r\n        </div>\r\n        <div className=\"textBody\">\r\n          <CardText className=\"gigtext\">\r\n            <strong>No Gigs Added.</strong>\r\n          </CardText>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"d-flex flex-column\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Card body className=\"titleBg\">\r\n            <CardTitle className=\"title\">My Gigs</CardTitle>\r\n          </Card>\r\n        </div>\r\n        <CardText>\r\n          {props.gigs.map(gig => {\r\n            return (\r\n              <div className=\"textBody\">\r\n                <li className=\"gigItem\" id={gig.name} key={gig._id} onClick={() => props.handleGigClick(gig._id)}>{gig.name}\r\n                </li>\r\n                <LaunchBtn handleLaunchClick={props.handleLaunchClick} />\r\n              </div>\r\n            )\r\n          })}\r\n        </CardText>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GigList","import React from 'react';\r\nimport { CardTitle, CardText, Card } from 'reactstrap';\r\n\r\nconst GigSetList = props => {\r\n  // console.log(\"GigSetList Component:\", props)\r\n  // console.log(\"gigs:\", props.gigs)\r\n  // console.log(\"setlists:\", props.setlists)\r\n\r\n  if (!props.currentGig) {\r\n    return (\r\n      <div className=\"SetlistCard d-flex flex-column\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Card body className=\"titleBg\">\r\n            <CardTitle>Gig Name</CardTitle>\r\n            <h5>Setlists:</h5>\r\n          </Card>\r\n        </div>\r\n        <div className=\"textBody\">\r\n          <CardText>\r\n            <i>No Setlist have been added to this gig.</i>\r\n          </CardText>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"SetlistCard d-flex flex-column\">\r\n        <div className=\"d-flex justify-content-center\">\r\n        </div>\r\n        <Card body className=\"titleBg\">\r\n          <CardTitle>{props.currentGig.name}</CardTitle>\r\n          <h5>Setlists:</h5>\r\n        </Card>\r\n        <CardText>\r\n          <ol>\r\n            {props.currentGig.setlists.map(setlist => {\r\n              return (\r\n                <li className=\"setlistlistItem\" id={setlist.id} key={setlist.id} onClick={() => props.setlistClickTop(setlist._id)}>{setlist.name}\r\n                </li>\r\n              )\r\n            })}\r\n          </ol>\r\n        </CardText>\r\n      </div>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nexport default GigSetList;","import React from 'react';\r\n\r\nconst Instructions = () => {\r\n  return (\r\n    <i className=\"textBody\">To create a Gig or Setlist, go to the 'Edit Gigs & Sets Page'.</i>\r\n  );\r\n};\r\n\r\nexport default Instructions","import React from 'react';\r\nimport { Card, CardTitle, CardText, } from 'reactstrap';\r\nimport Instructions from \"../Instructions\"\r\n\r\nconst AllSetList = props => {\r\n  // console.log(\"AllSetList\", props)\r\n  if (!props.setlists) {\r\n    return (\r\n      <div className=\"SetlistCard d-flex flex-column\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Card body className=\"titleBg\">\r\n            <CardTitle>My Setlists</CardTitle>\r\n          </Card>\r\n        </div>\r\n        <div className=\"textBody\">\r\n          <CardText>\r\n            <Instructions />\r\n          </CardText>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"SetlistCard d-flex flex-column\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Card body className=\"titleBg\">\r\n            <CardTitle>My Setlists</CardTitle>\r\n          </Card>\r\n        </div>\r\n        <CardText className=\"textBody\">\r\n          {props.setlists.map(setlist => {\r\n            return (\r\n              <li className=\"setlistItem\" id={setlist.id} key={setlist.id} onClick={() => props.allSetlistClick(setlist._id)}> {setlist.name}\r\n              </li>\r\n            )\r\n          })}\r\n        </CardText>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AllSetList;","import React from 'react';\r\nimport { Card, CardTitle, CardText, } from 'reactstrap';\r\n\r\nconst SongsGigDash = props => {\r\n  // console.log(\"Songs props:\", props)\r\n  if (!props.currentSetlist1) {\r\n    return (\r\n      <div className=\"SetlistCard d-flex flex-column\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Card body className=\"titleBg\">\r\n            <CardTitle>SetList Name</CardTitle>\r\n            <h5>Songs:</h5>\r\n          </Card>\r\n        </div>\r\n        <CardText className=\"textBody\">\r\n          <i>No songs have been added to this setlist.</i>\r\n        </CardText>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"SetlistCard d-flex flex-column\">\r\n        <div className=\"d-flex justify-content-center\">\r\n        </div>\r\n        <Card body className=\"titleBg\">\r\n          <CardTitle>Songs:</CardTitle>\r\n        </Card>\r\n        <CardText className=\"textBody\">\r\n          <ol>\r\n            {props.currentSetlist1.map(songs => {\r\n              return (\r\n                <li className=\"setlistlistItem\" id={songs.id} key={songs.id}>{songs.songName}\r\n                </li>\r\n              )\r\n            })}\r\n          </ol>\r\n        </CardText>\r\n      </div>\r\n\r\n    );\r\n  };\r\n};\r\n\r\nexport default SongsGigDash;","import React from 'react';\r\nimport { Card, CardTitle, CardText, } from 'reactstrap';\r\n\r\nconst SongsSetlistDash = props => {\r\n  // console.log(\"Songs props:\", props)\r\n  if (!props.currentSetlist2) {\r\n    return (\r\n      <div className=\"SetlistCard d-flex flex-column\">\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Card body className=\"titleBg\">\r\n            <CardTitle>SetList Name</CardTitle>\r\n            <h5>Songs:</h5>\r\n          </Card>\r\n        </div>\r\n        <CardText className=\"textBody\">\r\n          <i>No songs have been added to this setlist.</i>\r\n        </CardText>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"SetlistCard d-flex flex-column\">\r\n        <div className=\"d-flex justify-content-center\">\r\n        </div>\r\n        <Card body className=\"titleBg\">\r\n          <CardTitle>Songs:</CardTitle>\r\n        </Card>\r\n        <CardText className=\"textBody\">\r\n          <ol>\r\n            {props.currentSetlist2.map(songs => {\r\n              return (\r\n                <li className=\"setlistlistItem\" id={songs.id} key={songs.id}>{songs.songName}\r\n                </li>\r\n              )\r\n            })}\r\n          </ol>\r\n        </CardText>\r\n      </div>\r\n\r\n    );\r\n  };\r\n};\r\n\r\nexport default SongsSetlistDash;","import React from 'react';\r\nimport { Card, CardTitle, InputGroup, Input, Button } from 'reactstrap';\r\n\r\nconst AddSong = ({ songTitle, songArtist, handleSongSubmit, onChange }) => {\r\n  return (\r\n    <div className=\"SetlistCard d-flex flex-column\">\r\n      <div className=\"d-flex justify-content-center\">\r\n        <Card body className=\"titleBg\">\r\n          <CardTitle>Add a Song to Your Setlist</CardTitle>\r\n        </Card>\r\n      </div>\r\n      <div className=\"textBody\">\r\n      <Input id=\"songInput\" name=\"songTitle\" value={songTitle} onChange={onChange} placeholder=\"Song Title\" />\r\n      <Input id=\"artistInput\" name=\"songArtist\" value={songArtist} onChange={onChange} placeholder=\"Artist Name\" />\r\n      <Button onClick={handleSongSubmit}>Submit</Button>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddSong;","import axios from \"axios\"\r\nimport AddSong from \"../components/AddSong/index\"\r\n\r\n// let artist = \r\n\r\n\r\n\r\nexport default {\r\n    // getAPILyrics: function(artist, song, APIKey) {\r\n    //     return axios.get(\"https://orion.apiseeds.com/api/music/lyric/\" + artist + \"/\" + song + \"?apikey=\" + REACT_APP_API_KEY)\r\n    // },\r\n\r\n    //Users\r\n\r\n    //Get all users\r\n    findOrCreateUserbyemail: function(email){\r\n        return axios.post(\"/api/users/findorcreate\", {email: email})\r\n    },\r\n    getUsers: function() {\r\n        return axios.get(\"/api/users/\")\r\n    },\r\n\r\n    //Get specific user by id\r\n    getUser: function(id) {\r\n        return axios.get(\"/api/users/\" + id)\r\n    },\r\n    \r\n    //Save user to database\r\n    saveUser: function(savedUsers) {\r\n        return axios.post(\"/api/users\" + savedUsers)\r\n    },\r\n\r\n    //Delete specific user by id\r\n    deleteUser: function(id) {\r\n        return axios.delete(\"/api/users/\" + id)\r\n    },\r\n\r\n    //Update specific user by id\r\n    updateUser: function(id) {\r\n        return axios.put(\"/api/users/\" + id)\r\n    },\r\n\r\n    //Gigs\r\n    \r\n    //Get all gigs for a specific user\r\n    getGigsByUser: function(user) {\r\n        return axios.get(\"/api/gigs/\" + user) \r\n    },\r\n\r\n    //Get all gigs\r\n    getGigs: function() {\r\n        return axios.get(\"/api/gigs/\")\r\n    },\r\n\r\n    //Get specific gig by id\r\n    getGig: function(id) {\r\n        return axios.get(\"/api/gigs/\" + id)\r\n    },\r\n\r\n    //Save gig to the database\r\n    saveGig: function(savedGigs) {\r\n        return axios.post(\"/api/gigs/\", savedGigs)\r\n    },\r\n\r\n    //Delete gig by id\r\n    deleteGig: function(id) {\r\n        return axios.delete(\"/api/gigs/\" + id)\r\n    },\r\n\r\n    //Update gig by id\r\n    updateGig: function(id) {\r\n        return axios.put(\"/api/gigs/\" + id)\r\n    },\r\n\r\n    //Setlists\r\n\r\n    //Get all setlists for a specific user\r\n    getSetlistsByUser: function(user) {\r\n        return axios.get(\"api/setlists/\" + user)\r\n    },\r\n\r\n    //Get all setlists for a specific gig\r\n    getSetlistsByGig: function(gigId) {\r\n        return axios.get(\"/api/gigs/\" + gigId) \r\n    },\r\n\r\n    //Get all setlists\r\n    getSetlists: function() {\r\n        return axios.get(\"/api/setlists/\")\r\n    },\r\n\r\n    //Get specific setlist by id\r\n    getSetlist: function(id) {\r\n        return axios.get(\"/api/setlists/\" + id)\r\n    },\r\n\r\n    //Save setlist to the database\r\n    saveSetlist: function(savedSetlist) {\r\n        return axios.post(\"/api/setlists/\", savedSetlist)\r\n    },\r\n\r\n    //Delete setlist by id\r\n    deleteSetlist: function(id) {\r\n        return axios.delete(\"/api/setlists/\" + id)\r\n    },\r\n\r\n    //Update setlist by id\r\n    updateSetlist: function(id) {\r\n        return axios.put(\"/api/setlist/\" + id)\r\n    },\r\n\r\n    //Songs\r\n\r\n    //Get all songs in a specific setlist\r\n    getLyricsBySetlist: function(setlistId) {\r\n        return axios.get(\"/api/lyrics/setlists/\" + setlistId) \r\n    },\r\n\r\n    //Get all songs\r\n    getLyrics: function() {\r\n        return axios.get(\"/api/lyrics/\")\r\n    },\r\n\r\n    //Get specific song by id\r\n    getGigLyrics: function(id) {\r\n        return axios.get(\"/api/lyrics/\" + id)\r\n    },\r\n\r\n    //Save song to the database\r\n    saveLyrics: function(savedSongs) {\r\n        return axios.post(\"/api/lyrics/\", savedSongs)\r\n    },\r\n\r\n    //Delete song by id\r\n    deleteLyrics: function(id) {\r\n        return axios.delete(\"/api/lyrics/\" + id)\r\n    },\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport NavTop from '../../components/NavTop';\r\nimport GigList from '../../components/GigList';\r\nimport GigSetList from '../../components/GigSetList'\r\nimport AllSetList from '../../components/AllSetList';\r\nimport SongsGigDash from '../../components/SongsGigDash';\r\nimport SongsSetlistDash from '../../components/SongSetlistDash';\r\nimport { Row, Col, Container, Card } from 'reactstrap';\r\nimport API from '../../utils/API';\r\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport Instructions from \"../../components/Instructions\"\r\nimport './Main.css'\r\nimport Auth0Profile from '../../components/Auth0Provider/Auth0Profile';\r\n\r\nclass MainPage extends Component {\r\n  state = {\r\n    gigs: [],\r\n    currentGig: null,\r\n    launchedGig: null,\r\n    toLaunchPage: false,\r\n    currentSetlist1: null,\r\n    currentSetlist2: null,\r\n    setlists: [],\r\n    songs: []\r\n  }\r\n\r\n  handleLaunchClick = (gigId) => {\r\n    API.getSetlistsByGig(gigId)\r\n      .then(res => {\r\n        this.setState({ launchedGig: res.data })\r\n\r\n        this.setRedirect()\r\n        this.renderRedirect()\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  setRedirect = () => {\r\n    this.setState({\r\n      toLaunchPage: true\r\n    })\r\n  }\r\n\r\n  renderRedirect = () => {\r\n    if (this.state.toLaunchPage) {\r\n      return <Redirect to=\"/launched\" />\r\n    }\r\n  }\r\n\r\n  handleGigClick = (gigId) => {\r\n    API.getSetlistsByGig(gigId)\r\n      .then(res => {\r\n        this.setState({ currentGig: res.data })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  setlistClickTop = (setlistId) => {\r\n    API.getLyricsBySetlist(setlistId)\r\n      .then(res => {\r\n        this.setState({ currentSetlist1: res.data })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  allSetlistClick = (setlistId) => {\r\n    API.getLyricsBySetlist(setlistId)\r\n      .then(res => {\r\n        this.setState({ currentSetlist2: res.data })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    API.findOrCreateUserbyemail(this.props.email)\r\n      .then(res => {\r\n        this.setState({ gigs: res.data.gigs, setlists: res.data.setlists })\r\n      })\r\n      // API.getGigs()\r\n      //   .then(res => {\r\n      //     this.setState({ gigs: res.data })\r\n      //     console.log(` getting gigs: ${this.state.gigs}`)\r\n      //   })\r\n\r\n      //   .catch(err => console.log(err));\r\n      // API.getSetlists()\r\n      //   .then(res => {\r\n      //     this.setState({ setlists: res.data })\r\n      //     console.log(` getting setlists: ${this.state.setlists}`)\r\n      //   })\r\n      //   .catch(err => console.log(err))\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bg\">\r\n        <NavTop />\r\n        {/* <Auth0Profile></Auth0Profile> */}\r\n        <Container>\r\n          <Row>\r\n            <Col sm=\"4\">\r\n              <Card className=\"giglist\">\r\n                <GigList\r\n                  className=\"gigcard\"\r\n                  handleGigClick={this.handleGigClick}\r\n                  gigs={this.state.gigs}\r\n                  setlists={this.state.setlists}\r\n                  currentGig={this.state.currentGig}\r\n                  // Launch props\r\n                  launchedGig={this.state.launchedGig}\r\n                  handleLaunchClick={this.handleLaunchClick}\r\n                  setRedirect={this.setRedirect}\r\n                  renderRedirect={this.renderRedirect}\r\n                />\r\n                <Instructions />\r\n              </Card>\r\n            </Col>\r\n            <Col sm=\"4\">\r\n              <Card className=\"gigsetlist\">\r\n                <GigSetList\r\n                  setlists={this.state.setlists}\r\n                  gigs={this.state.gigs}\r\n                  currentGig={this.state.currentGig}\r\n                  setlistClickTop={this.setlistClickTop} />\r\n              </Card>\r\n            </Col>\r\n            <Col sm=\"4\">\r\n              <Card className=\"setlistsongs\">\r\n                <SongsGigDash currentSetlist1={this.state.currentSetlist1} />\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm=\"4\">\r\n              <Card className=\"allsetlists\">\r\n                <AllSetList\r\n                  currentSetlist2={this.state.currentSetlist2}\r\n                  allSetlistClick={this.allSetlistClick}\r\n                  setlists={this.state.setlists}\r\n                />\r\n                <Instructions />\r\n              </Card>\r\n\r\n            </Col>\r\n            <Col>\r\n              <Card className=\"setlistsongs\">\r\n                <SongsSetlistDash currentSetlist2={this.state.currentSetlist2} />\r\n              </Card>\r\n\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withAuthenticationRequired(MainPage, {\r\n  onRedirecting: () => <Loading />,\r\n});","import React from 'react';\r\nimport {\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n  Button\r\n} from 'reactstrap';\r\n\r\n\r\n\r\nconst GigInputSubmit = props => {\r\n  // console.log(\"Props-GigInputSubmit\", props)\r\n  return (\r\n    <div className=\"inputBody\">\r\n      <InputGroup className=\"gigInput mb-3\">\r\n        <Input placeholder=\"Name\" name=\"gigName\" value={props.gigName} onChange={props.onChange} />\r\n        <InputGroupAddon addonType=\"prepend\"><Button onClick={props.gigSubmit}>Submit</Button></InputGroupAddon>\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GigInputSubmit;","import React from 'react';\r\nimport {\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Input,\r\n  Button\r\n} from 'reactstrap';\r\n\r\n\r\n\r\nconst SetlistInputSubmit = props => {\r\n  // console.log(\"Props-SetlistInputSubmit\", props)\r\n  return (\r\n    <div className=\"inputBody\">\r\n      <InputGroup className=\"setlistInput mb-3\">\r\n        <Input placeholder=\"Name\" name=\"setlistName\" value={props.setlistName} onChange={props.onChange} />\r\n        <InputGroupAddon addonType=\"prepend\"><Button onClick={props.setSubmit}>Submit</Button></InputGroupAddon>\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetlistInputSubmit;","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Card } from 'reactstrap';\r\nimport NavTop from '../../components/NavTop';\r\nimport GigList from \"../../components/GigList\"\r\nimport GigSetList from '../../components/GigSetList';\r\nimport GigInputSubmit from '../../components/GigInputSubmit'\r\nimport SetlistInputSubmit from '../../components/SetlistInputSubmit'\r\nimport AddSong from '../../components/AddSong';\r\nimport AllSetList from '../../components/AllSetList';\r\nimport SongsSetlistDash from '../../components/SongSetlistDash';\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\r\nimport Auth0Profile from '../../components/Auth0Provider/Auth0Profile';\r\nimport API from '../../utils/API';\r\nimport axios from \"axios\"\r\nimport './Crud.css';\r\n\r\n\r\nclass CrudPage extends Component {\r\n  state = {\r\n    currentGig: null,\r\n    currentSetlist1: null,\r\n    currentSetlist2: null,\r\n    gigName: \"\",\r\n    setlistName: \"\",\r\n    songTitle: \"\",\r\n    songArtist: \"\",\r\n    gigs: [],\r\n    setlists: [],\r\n    songs: []\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    API.findOrCreateUserbyemail(this.props.email)\r\n      .then(res => {\r\n        this.setState({ gigs: res.data.gigs, setlists: res.data.setlists })\r\n      })\r\n    // API.getGigs()\r\n    //   .then(res => {\r\n    //     this.setState({ gigs: res.data })\r\n    //     // console.log(` getting gigs: ${this.state.gigs}`)\r\n    //   })\r\n\r\n    //   .catch(err => console.log(err));\r\n    // API.getSetlists()\r\n    //   .then(res => {\r\n    //     this.setState({ setlists: res.data })\r\n    //     // console.log(` getting setlists: ${this.state.setlists}`)\r\n    //   })\r\n    //   .catch(err => console.log(err))\r\n  }\r\n\r\n  handleGigClick = (gigId) => {\r\n    API.getSetlistsByGig(gigId)\r\n      .then(res => {\r\n        this.setState({ currentGig: res.data })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  setlistClickTop = (setlistId) => {\r\n    API.getLyricsBySetlist(setlistId)\r\n      .then(res => {\r\n        this.setState({ currentSetlist1: res.data })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  allSetlistClick = (setlistId) => {\r\n    API.getLyricsBySetlist(setlistId)\r\n      .then(res => {\r\n        this.setState({ currentSetlist2: res.data })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  handleInput = event => {\r\n    const { name, value } = event.target;\r\n    console.log(\"EventTarget:\", event.target)\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n    console.log(\"name:\", name, \"value:\", value)\r\n  }\r\n\r\n  handleGigSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    API.saveGig({ name: this.state.gigName, user: this.props.email })\r\n      .then(res => {\r\n        console.log(\"response for HandleSubmit:\", res.data)\r\n        this.setState({\r\n          gigs: [ ...this.state.gigs, res.data ]\r\n        })\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  handleSetlistSubmit = event => {\r\n    event.preventDefault();\r\n    API.saveSetlist({ name: this.state.setlistName, user: this.props.email })\r\n      .then(res => {\r\n        console.log(\"response for HandleSubmit:\", res.data)\r\n        this.setState({\r\n          setlists: [ ...this.state.setlists, res.data ]\r\n        })\r\n      })\r\n      \r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  loadSetlists = () => {\r\n    API.getSetlistsByUser()\r\n      .then(res =>\r\n        this.setState({ setlists: res.data })\r\n      )\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  loadGigs = () => {\r\n    API.getGigsByUser()\r\n      .then(res =>\r\n        this.setState({ gigs: res.data })\r\n      )\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // handleSongSubmit = () => {\r\n  //   event.preventDefault()\r\n  //   const newSong = { songTitle: this.state.songTitle, songArtist: this.state.songArtist}\r\n  //   const newAllSongs = { ...this.state.songs, newSong}\r\n  //   this.setState({ songs: newAllSongs})\r\n  // }\r\n\r\n  handleSongSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const songObject = {\r\n      title: this.state.songTitle,\r\n      artist: this.state.songArtist\r\n    };\r\n\r\n    console.log(\"songObject: \", songObject)\r\n\r\n    axios.post('/api/lyrics/get-lyrics', songObject)\r\n      .then((res) => {\r\n        console.log(res.data)\r\n      }).catch((error) => {\r\n        console.log(error)\r\n      });\r\n\r\n    this.setState({ songTitle: '', songArtist: '' })\r\n  }\r\n\r\n  render() {\r\n    console.log(\"THis is the CRUD email prop from auth0\", this.props.email)\r\n    return (\r\n      <div className=\"bg\">\r\n        <NavTop />\r\n        {/* <Auth0Profile></Auth0Profile> */}\r\n        <Container>\r\n          <Row>\r\n            <Col sm=\"4\">\r\n              <Card className=\"giglist\">\r\n\r\n                <GigList\r\n                  className=\"gigcard\"\r\n                  handleGigClick={this.handleGigClick}\r\n                  gigs={this.state.gigs}\r\n                  setlists={this.state.setlists}\r\n                  currentGig={this.state.currentGig}\r\n                />\r\n\r\n                <div className=\"btn-title\">Add Gig:</div>\r\n                <GigInputSubmit\r\n                  gigSubmit={this.handleGigSubmit}\r\n                  gigName={this.state.gigName}\r\n                  onChange={this.handleInput}\r\n                />\r\n              </Card>\r\n            </Col >\r\n            <Col sm=\"4\">\r\n              <Card className=\"gigsetlist\">\r\n                <GigSetList\r\n                  setlists={this.state.setlists}\r\n                  gigs={this.state.gigs}\r\n                  currentGig={this.state.currentGig}\r\n                  setlistClickTop={this.setlistClickTop}\r\n                />\r\n              </Card>\r\n            </Col>\r\n            <Col sm=\"4\">\r\n              <Card className=\"setlistsongs\">\r\n                <AllSetList\r\n                  currentSetlist1={this.state.currentSetlist1}\r\n                  setlists={this.state.setlists}\r\n                />\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm=\"4\">\r\n              <Card className=\"allsetlists\">\r\n                <AllSetList\r\n                  currentSetlist2={this.state.currentSetlist2}\r\n                  allSetlistClick={this.allSetlistClick}\r\n                  setlists={this.state.setlists}\r\n                />\r\n                <SetlistInputSubmit\r\n                  setSubmit={this.handleSetlistSubmit}\r\n                  setlistName={this.state.setlistName}\r\n                  onChange={this.handleInput}\r\n                />\r\n              </Card>\r\n\r\n            </Col >\r\n            <Col sm=\"4\">\r\n              <Card className=\"setlistsongs\">\r\n                <SongsSetlistDash currentSetlist2={this.state.currentSetlist2} />\r\n              </Card>\r\n            </Col>\r\n            <Col sm=\"4\">\r\n              <Card className=\"addsongs\">\r\n                <AddSong\r\n                  handleSongSubmit={this.handleSongSubmit}\r\n                  songTitle={this.state.songTitle}\r\n                  songArtist={this.state.songArtist}\r\n                  onChange={this.handleInput}\r\n                />\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withAuthenticationRequired(CrudPage, {\r\n  onRedirecting: () => <Loading />,\r\n});","import React from 'react';\r\nimport { Card, CardTitle, CardText, } from 'reactstrap';\r\n\r\nconst Lyrics = () => {\r\n  return (\r\n    <Card body>\r\n      <h5>Top Down</h5>\r\n      <CardText>\r\n        <p>\r\n          If you ain't got no money take yo'broke ass home\r\n          You say: If you ain't got no money take yo'broke ass home\r\n          G-L-A-M-O-R-O-U-S, yeah G-L-A-M-O-R-O-U-S\r\n          We flying the first class\r\n          Up in the sky\r\n          Poppin' champagne\r\n          Livin' my life\r\n          In the fast lane\r\n          And I won't change\r\n          For the glamorous, oh the flossy flossy\r\n          The glamorous,\r\n          The glamorous, glamorous (the glamorous life)\r\n          ...\r\n        </p>\r\n      </CardText>\r\n      <h5>Top Down</h5>\r\n      <CardText>\r\n        <p>\r\n          If you ain't got no money take yo'broke ass home\r\n          You say: If you ain't got no money take yo'broke ass home\r\n          G-L-A-M-O-R-O-U-S, yeah G-L-A-M-O-R-O-U-S\r\n          We flying the first class\r\n          Up in the sky\r\n          Poppin' champagne\r\n          Livin' my life\r\n          In the fast lane\r\n          And I won't change\r\n          For the glamorous, oh the flossy flossy\r\n          The glamorous,\r\n          The glamorous, glamorous (the glamorous life)\r\n          ...\r\n        </p>\r\n      </CardText>\r\n      \r\n\r\n    </Card>\r\n\r\n  );\r\n};\r\n\r\nexport default Lyrics;","import React, { Component } from 'react';\r\nimport NavTop from '../components/NavTop';\r\nimport { Container, Row, Col, Card } from 'reactstrap';\r\nimport GigSetList from '../components/GigSetList';\r\nimport Lyrics from '../components/Lyrics'\r\nimport Loading from \"../components/Loading/Loading\";\r\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\";\r\nimport Auth0Profile from '../components/Auth0Provider/Auth0Profile';\r\nimport API from '../utils/API';\r\nimport './MainPage/Main.css'\r\n\r\nclass LaunchedPage extends Component {\r\n  state = {\r\n    gigs: [],\r\n    currentGig: null,\r\n    setlists: [],\r\n    currentSetlist: null,\r\n    songs: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    API.getGigs()\r\n      .then(res => this.setState({ gigs: res.data }))\r\n      .catch(err => console.log(err));\r\n    API.getSetlists()\r\n      .then(res => this.setState({ setlists: res.data }))\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  handleSetlistClick = (setlistId) => {\r\n    API.getLyricsBySetlist(setlistId)\r\n      .then(res => {\r\n        this.setState({ currentSetlist: res.data })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bg\">\r\n        <NavTop />\r\n        <Container>\r\n          <Row>\r\n            <Col sm=\"4\">\r\n              <Card className=\"gigsetlist\">\r\n                <GigSetList setlists={this.state.setlists}\r\n                  gigs={this.state.gigs}\r\n                  currentGig={this.state.currentGig}\r\n                  // handleSetlistClick={this.handleSetlistClick}\r\n                   />\r\n              </Card>\r\n            </Col>\r\n\r\n            <Col>\r\n              <Card className=\"lyrics\">\r\n                <Lyrics data={this.state} />\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default withAuthenticationRequired(LaunchedPage, {\r\n  onRedirecting: () => <Loading />,\r\n});\r\n\r\n\r\n","import { createBrowserHistory } from \"history\";\r\nexport default createBrowserHistory();","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Loading from './components/Loading/Loading'\r\nimport LandingPage from './pages/LandingPage/LandingPage.js';\r\nimport MainPage from './pages/MainPage/MainPage';\r\nimport CrudPage from './pages/CrudPage/CrudPage';\r\nimport LaunchedPage from './pages/LaunchedPage';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport history from \"./utils/history\";\r\n\r\n\r\nconst App = () => {\r\n  /*const { isLoading, error } = useAuth0();\r\n\r\n  if (error) {\r\n    return <div>Oops... {error.message}</div>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  } */\r\n  const { user } = useAuth0();\r\n  return (\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={LandingPage} />\r\n        <Route path=\"/main\" >\r\n          <MainPage email={user ? user.email : null} />\r\n        </Route>\r\n        <Route path=\"/edit\" >\r\n          <CrudPage email={user ? user.email : null} />\r\n        </Route>\r\n        <Route path=\"/launched\" component={LaunchedPage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import LandingPage from './pages/LandingPage';\r\n// import MainPage from './pages/MainPage2'\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\nimport config from \"./auth_config.json\";\r\nimport history from \"./utils/history\";\r\n\r\nconst onRedirectCallback = (appState) => {\r\n  history.push(\r\n    appState && appState.returnTo\r\n      ? appState.returnTo\r\n      : window.location.pathname\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Auth0Provider\r\n      domain={config.domain}\r\n      clientId={config.clientId}\r\n      audience={config.audience}\r\n      redirectUri={window.location.origin}\r\n      onRedirectCallback={onRedirectCallback}\r\n    >\r\n      <App />\r\n    </Auth0Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n"],"sourceRoot":""}